// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TractorMarket.Data;

#nullable disable

namespace TractorMarket.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230528222512_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("TractorMarket.Entities.Tractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Horsepower")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Velocity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Vintage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tractors");
                });

            modelBuilder.Entity("TractorMarket.Entities.TractorAddon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TractorAddons");
                });

            modelBuilder.Entity("TractorMarket.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Budget")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TractorToAddon", b =>
                {
                    b.Property<int>("AddonsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TractorsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AddonsId", "TractorsId");

                    b.HasIndex("TractorsId");

                    b.ToTable("TractorToAddon");
                });

            modelBuilder.Entity("TractorToAddon", b =>
                {
                    b.HasOne("TractorMarket.Entities.TractorAddon", null)
                        .WithMany()
                        .HasForeignKey("AddonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TractorMarket.Entities.Tractor", null)
                        .WithMany()
                        .HasForeignKey("TractorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
